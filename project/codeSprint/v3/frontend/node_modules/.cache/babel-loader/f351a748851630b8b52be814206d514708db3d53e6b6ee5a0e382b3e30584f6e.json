{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /A[M\\s@]+@[*\\s@]+\\.[*\\s@]+$/;\n  const password_pattern = /A(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.firstname === \"\") {\n    error.firstname = \"First Name should not be empty\";\n  } else {\n    error.firstname = \"\";\n  }\n  if (values.lastname === \"\") {\n    error.lastname = \"Last Name should not be empty\";\n  } else {\n    error.lastname = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","firstname","lastname","email","test","password","_c","$RefreshReg$"],"sources":["D:/2023/3 Fall 2023/project/eduloyalty/CodeSprint/eduloyalty_v1/frontend/src/components/signup/SignupValidation.js"],"sourcesContent":["function Validation(values) {\r\n    let error = {}\r\n    const email_pattern = /A[M\\s@]+@[*\\s@]+\\.[*\\s@]+$/\r\n    const password_pattern = /A(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n    \r\n    if(values.firstname === \"\") {\r\n        error.firstname = \"First Name should not be empty\"\r\n    }\r\n    else{\r\n        error.firstname = \"\"\r\n    }\r\n\r\n    if(values.lastname === \"\") {\r\n        error.lastname = \"Last Name should not be empty\"\r\n    }\r\n    else{\r\n        error.lastname = \"\"\r\n    }\r\n\r\n    if(values.email === \"\") {\r\n    error.email = \"Name should not be empty\"\r\n    }\r\n    else if(!email_pattern.test(values.email)) {\r\n    error.email = \"Email Didn't match\"\r\n    }else {\r\n    error.email = \"\"\r\n    }\r\n    \r\n    if(values.password === \"\") {\r\n    error.password = \"Password should not be empty\"\r\n    }\r\n    else if(!password_pattern.test(values.password)) {\r\n    error.password = \"Password didn't match\"\r\n    } else {\r\n    error.password = \"\"\r\n    }\r\n    \r\n    return error;\r\n}\r\n\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAGH,MAAM,CAACI,SAAS,KAAK,EAAE,EAAE;IACxBH,KAAK,CAACG,SAAS,GAAG,gCAAgC;EACtD,CAAC,MACG;IACAH,KAAK,CAACG,SAAS,GAAG,EAAE;EACxB;EAEA,IAAGJ,MAAM,CAACK,QAAQ,KAAK,EAAE,EAAE;IACvBJ,KAAK,CAACI,QAAQ,GAAG,+BAA+B;EACpD,CAAC,MACG;IACAJ,KAAK,CAACI,QAAQ,GAAG,EAAE;EACvB;EAEA,IAAGL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAE;IACxBL,KAAK,CAACK,KAAK,GAAG,0BAA0B;EACxC,CAAC,MACI,IAAG,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IAC3CL,KAAK,CAACK,KAAK,GAAG,oBAAoB;EAClC,CAAC,MAAK;IACNL,KAAK,CAACK,KAAK,GAAG,EAAE;EAChB;EAEA,IAAGN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAE;IAC3BP,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EAC/C,CAAC,MACI,IAAG,CAACL,gBAAgB,CAACI,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE;IACjDP,KAAK,CAACO,QAAQ,GAAG,uBAAuB;EACxC,CAAC,MAAM;IACPP,KAAK,CAACO,QAAQ,GAAG,EAAE;EACnB;EAEA,OAAOP,KAAK;AAChB;AAACQ,EAAA,GAtCQV,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}